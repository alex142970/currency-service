// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: currency/currency_service.proto

package com_currency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateRequest) Reset() {
	*x = ExchangeRateRequest{}
	mi := &file_currency_currency_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateRequest) ProtoMessage() {}

func (x *ExchangeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRateRequest) Descriptor() ([]byte, []int) {
	return file_currency_currency_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeRateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ExchangeRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rate          float32                `protobuf:"fixed32,1,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateResponse) Reset() {
	*x = ExchangeRateResponse{}
	mi := &file_currency_currency_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateResponse) ProtoMessage() {}

func (x *ExchangeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRateResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateResponse) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ExchangeRateHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      string                 `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        string                 `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateHistoryRequest) Reset() {
	*x = ExchangeRateHistoryRequest{}
	mi := &file_currency_currency_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateHistoryRequest) ProtoMessage() {}

func (x *ExchangeRateHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateHistoryRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRateHistoryRequest) Descriptor() ([]byte, []int) {
	return file_currency_currency_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExchangeRateHistoryRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *ExchangeRateHistoryRequest) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type ExchangeRateHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rate          []float32              `protobuf:"fixed32,1,rep,packed,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateHistoryResponse) Reset() {
	*x = ExchangeRateHistoryResponse{}
	mi := &file_currency_currency_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateHistoryResponse) ProtoMessage() {}

func (x *ExchangeRateHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateHistoryResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRateHistoryResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_service_proto_rawDescGZIP(), []int{3}
}

func (x *ExchangeRateHistoryResponse) GetRate() []float32 {
	if x != nil {
		return x.Rate
	}
	return nil
}

var File_currency_currency_service_proto protoreflect.FileDescriptor

const file_currency_currency_service_proto_rawDesc = "" +
	"\n" +
	"\x1fcurrency/currency_service.proto\x12\bcurrency\")\n" +
	"\x13ExchangeRateRequest\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\"*\n" +
	"\x14ExchangeRateResponse\x12\x12\n" +
	"\x04rate\x18\x01 \x01(\x02R\x04rate\"R\n" +
	"\x1aExchangeRateHistoryRequest\x12\x1b\n" +
	"\tdate_from\x18\x01 \x01(\tR\bdateFrom\x12\x17\n" +
	"\adate_to\x18\x02 \x01(\tR\x06dateTo\"1\n" +
	"\x1bExchangeRateHistoryResponse\x12\x12\n" +
	"\x04rate\x18\x01 \x03(\x02R\x04rate2\xc1\x01\n" +
	"\bCurrency\x12O\n" +
	"\fExchangeRate\x12\x1d.currency.ExchangeRateRequest\x1a\x1e.currency.ExchangeRateResponse\"\x00\x12d\n" +
	"\x13ExchangeRateHistory\x12$.currency.ExchangeRateHistoryRequest\x1a%.currency.ExchangeRateHistoryResponse\"\x00B\x0eZ\fcom.currencyb\x06proto3"

var (
	file_currency_currency_service_proto_rawDescOnce sync.Once
	file_currency_currency_service_proto_rawDescData []byte
)

func file_currency_currency_service_proto_rawDescGZIP() []byte {
	file_currency_currency_service_proto_rawDescOnce.Do(func() {
		file_currency_currency_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_currency_currency_service_proto_rawDesc), len(file_currency_currency_service_proto_rawDesc)))
	})
	return file_currency_currency_service_proto_rawDescData
}

var file_currency_currency_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_currency_currency_service_proto_goTypes = []any{
	(*ExchangeRateRequest)(nil),         // 0: currency.ExchangeRateRequest
	(*ExchangeRateResponse)(nil),        // 1: currency.ExchangeRateResponse
	(*ExchangeRateHistoryRequest)(nil),  // 2: currency.ExchangeRateHistoryRequest
	(*ExchangeRateHistoryResponse)(nil), // 3: currency.ExchangeRateHistoryResponse
}
var file_currency_currency_service_proto_depIdxs = []int32{
	0, // 0: currency.Currency.ExchangeRate:input_type -> currency.ExchangeRateRequest
	2, // 1: currency.Currency.ExchangeRateHistory:input_type -> currency.ExchangeRateHistoryRequest
	1, // 2: currency.Currency.ExchangeRate:output_type -> currency.ExchangeRateResponse
	3, // 3: currency.Currency.ExchangeRateHistory:output_type -> currency.ExchangeRateHistoryResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_currency_currency_service_proto_init() }
func file_currency_currency_service_proto_init() {
	if File_currency_currency_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_currency_currency_service_proto_rawDesc), len(file_currency_currency_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_currency_currency_service_proto_goTypes,
		DependencyIndexes: file_currency_currency_service_proto_depIdxs,
		MessageInfos:      file_currency_currency_service_proto_msgTypes,
	}.Build()
	File_currency_currency_service_proto = out.File
	file_currency_currency_service_proto_goTypes = nil
	file_currency_currency_service_proto_depIdxs = nil
}
